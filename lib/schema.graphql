schema {
  query: Query
  mutation: Mutation
}

type Query {
  getUsers: [User]
  getUser(mail: String!): User
  getAreas: [Area]
  getProjects(areaId: String!): [Project]
  getActivities(userId: String!): [Activity]
  getActivity(projectId: String!): [Activity]
  getConversation(activityId: String!): Conversation
  getTracking(activityId: String!): [Tracking]
  getNotifications(activityId: String!): [Notification]
}

type Mutation {
  createUser(input: UserInput): User
  createArea(input: AreaInput): Area 
  createProject(input: ProjectInput): Project
}

input AreaInput {
  name: String!
  userId: String!
  fatherId: String
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

input UserInput {
  name: String!
  mail: String!
  role: Role! 
  passwordUpdated: Boolean
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

input ProjectInput {
  name: String!
  supportMail: String!
  areaId: String!
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

type User {
  id: ID
  name: String
  mail: String
  role: Role 
  passwordUpdated: Boolean
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

type Area {
  id: ID
  externalId: String
  name: String
  inCharge: User
  father: Area
  children: [Area]
  projects: [Project]
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

type Project {
  id: ID
  externalId: String
  name: String
  mail: String
  activities: [Activity]
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

type Activity {
  id: ID
  num: Int
  threadId: String
  title: String
  status: Status
  category: Category
  color: Color 
  criticality: Criticality
  isOpen: Boolean
  notifications: [Notification]
  tracking: [Tracking]
  assigned: User
  conversation: Conversation
  closedInternallyAt: String
  closedInternallyBy: String
  closedClientAt: String
  closedClientBy: String
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

type Notification {
  id: ID
  num: Int
  historyId: String
  messageId: String
  title: String
  text: String
  sentBy: String
  organization: String
  language: String
  responseTime: Int
  owner: Owner
  nextOwner: Owner
  isFirstMessage: Boolean
  cc: [String]
  bcc: [String]
  to: [String]
  attachments: [Attachment]
  publishDate: String
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

type Tracking {
  id: ID
  num: Int
  user: User
  status: Status
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

type Conversation {
  id: ID
  text: String
  html: String
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

type Attachment {
  id: ID
  path: String
  name: String
  modifiedAt: String
  modifiedBy: String
  createdAt: String
  createdBy: String
}

enum Color {
  RED
  YELLOW
  GREEN
}

enum Criticality {
  HIGH
  LOW
}

enum Status {
  CLOSED_CLIENT
  REASSIGNED
  STARTED
  REOPENED
  ASSIGNED
  CLOSED_INTERNALLY
  RECEIVED
  PLANNED
}

enum Category {
  INCIDENCE
  UNASSIGNED
  DEVELOPMENT
}

enum Role {
  CONSULTANT
  ADMIN
  USER
}

enum Owner {
  SUPPORT
  CLIENT
}